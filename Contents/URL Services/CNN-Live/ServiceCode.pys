import re

ICON                = "icon-default.png"

LIVE_STREAM_BASE_URL = 'http://www.cnn.com/CNNLiveFlash/StreamStatus/metadata/stream_dvr_%s.xml'
LIVE_STREAM_SOURCE_URL = 'http://www.cnn.com/video/live/cnnlive_%s_flash.xml'

####################################################################################################

def MetadataObjectForURL(url):
    stream_id = re.match("cnn://(?P<id>[0-9]+)", url).groupdict()['id']
    stream_xml = XML.ElementFromURL(LIVE_STREAM_BASE_URL % stream_id, cacheTime = 0)
    stream = stream_xml.xpath("//streams/stream")[0]

    title = stream.xpath(".//title/text()")
    summary = stream.xpath(".//description/text()")[0]

    return VideoClipObject(
        title = title,
        summary = summary,
        thumb = R(ICON))

####################################################################################################

def MediaObjectsForURL(url):
    return [
        MediaObject(
          protocol = Protocol.RTMP,
          audio_channels = 2,
          parts = [PartObject(key=Callback(PlayVideo, url = url))]
        )
    ]

####################################################################################################

def PlayVideo(url):
    stream_id = re.match("cnn://(?P<id>[0-9]+)", url).groupdict()['id']
    source_details = XML.ElementFromURL(LIVE_STREAM_SOURCE_URL % stream_id)
    stream_url = source_details.xpath("/asx/entry/ref[contains(@href, 'rtmp://')]")[0].get('href')

    index = stream_url.find('cnnlive')
    player = stream_url[0:index-1]
    clip = stream_url[index:]
    return Redirect(RTMPVideoURL(url = player, clip = clip, live = True))